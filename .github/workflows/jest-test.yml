name: Run Jest Tests on PR Merge Result

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: jest-test 
    steps:
      - name: Checkout merged PR code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.11.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
      

      - name: Remove lockfile
        run: rm pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Get public IP
        id: get_ip
        run: |
          echo "ip=$(curl -s https://checkip.amazonaws.com)" >> $GITHUB_OUTPUT

      - name: Add IP to MongoDB Atlas Access List
        run: |
          curl -X POST \
            -u "${{ secrets.ATLAS_PUBLIC_KEY }}:${{ secrets.ATLAS_PRIVATE_KEY }}" \
            --digest \
            -H "Content-Type: application/json" \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.ATLAS_PROJECT_ID }}/accessList" \
            -d "[{\"ipAddress\": \"${{ steps.get_ip.outputs.ip }}\", \"comment\": \"GitHub Actions Runner\"}]"
        env:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
          ATLAS_PROJECT_ID: ${{ secrets.ATLAS_PROJECT_ID }}
      
      - name: 'Create env file'
        working-directory: backend
        run: |
          touch .env
          echo FIREBASE_AUTH_EMULATOR_HOST="127.0.0.1:9099" >> .env
          echo FIREBASE_EMULATOR_HOST="127.0.0.1:4000" >> .env
          echo GCLOUD_PROJECT="demo-test" >> .env
      
      - name: Install Firebase CLI
        working-directory: backend
        run: npm install -g firebase-tools

      - name: Start Firebase Emulator (Auth only)
        working-directory: backend
        run: |
          nohup firebase emulators:start --only auth --project demo-test &
          sleep 10
          
      - name: Run Jest tests
        working-directory: backend
        run: pnpm test:ci
        env:
          DB_URL: ${{ secrets.DB_URL }}

      - name: Remove IP from MongoDB Atlas Access List
        if: always()
        run: |
          curl -X DELETE \
            -u "${{ secrets.ATLAS_PUBLIC_KEY }}:${{ secrets.ATLAS_PRIVATE_KEY }}" \
            --digest \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.ATLAS_PROJECT_ID }}/accessList/${{ steps.get_ip.outputs.ip }}"
        env:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
          ATLAS_PROJECT_ID: ${{ secrets.ATLAS_PROJECT_ID }}
